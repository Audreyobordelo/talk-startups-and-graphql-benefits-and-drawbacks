{"version":3,"sources":["graphql.js","slide/intro.js","slide/questions.js","slide/me.js","slide/whatIsTeamstarter.js","warning.js","slide/startingAStartup.js","slide/sectionLimitedTime.js","slide/notJustARFC.js","slide/easyToUnderstand.js","slide/graphiql.js","slide/resolversCanBeAPain.js","slide/generatingYourSchema.js","slide/openSource.js","slide/evolutionReady.js","slide/adaptable.js","slide/speedAndBugs.js","slide/heavyTyping.js","slide/takingInAccountTheMarket.js","slide/everythingIsAnAPI.js","slide/useAPIs.js","slide/performances.js","slide/beConfident.js","slide/someChangesAreHarderThanOthers.js","slide/youDoNotHaveToChooseAlone.js","slide/smartRights.js","presentation.js","registerServiceWorker.js","index.js"],"names":["Graphql","_ref","style","_ref$className","className","react_default","a","createElement","concat","Object","objectSpread","width","viewBox","fill","xmlns","height","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","intro","slide","transition","bgColor","progressColor","controlColor","src","alt","top","right","opacity","bottom","left","notes","heading","size","caps","fit","textColor","components_text","bold","questions","textSize","marginTop","href","zIndex","position","me","lineHeight","whatIsTeamstarter","Warning","animation","startingAStartup","sectionLimitedTime","appear","notJustARFC","list","list_item","easyToUnderstand","graphiql","resolversCanBeAPain","generatingYourSchema","openSource","evolutionReady","adaptable","speedAndBugs","heavyTyping","takingInAccountTheMarket","marginBottom","everythingIsAnAPI","useAPIs","performances","beConfident","someChangesAreHarderThanOthers","youDoNotHaveToChooseAlone","smartRights","require","theme","createTheme","white","black","pink","blue","yellow","grey","red","primary","secondary","Presentation","deck","transitionDuration","Intro","Me","WhatIsTeamstarter","Questions","React","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","presentation_Presentation","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.affb0aa6.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Graphql({ style, className = '' }) {\n  return (\n    <div>\n      <style>{`\n    .graphqlLogo .outerPath {\n      opacity: 0;\n      stroke-dashoffset: 450;\n      stroke-dasharray: 450;\n      transform-origin: center;\n      animation: appearOuterPath 1.2s 200ms ease-out forwards, rotateOuterPath 4s 1.4s ease-in-out infinite;\n    }\n    .graphqlLogo .innerPath {\n      opacity: 0;\n      stroke-dashoffset: 390;\n      stroke-dasharray: 390;\n      animation: appearInnerPath 400ms 1200ms ease-out forwards;\n    }\n    .dot1, .dot2, .dot3, .dot4, .dot5, .dot6 {\n      opacity: 0;\n      transform-origin: center;\n    }\n    .dot1 {\n      animation: appearDots 400ms 200ms ease-out forwards;\n    }\n    .dot2 {\n      animation: appearDots 400ms 400ms ease-out forwards;\n    }\n    .dot3 {\n      animation: appearDots 400ms 600ms ease-out forwards;\n    }\n    .dot4 {\n      animation: appearDots 400ms 800ms ease-out forwards;\n    }\n    .dot5 {\n      animation: appearDots 400ms 1000ms ease-out forwards;\n    }\n    .dot6 {\n      animation: appearDots 400ms 1200ms ease-out forwards;\n    }\n\n  @keyframes appearDots {\n    0% {\n      opacity: 0;\n      transform: scale(0.3) rotateX(50deg) rotateY(100deg) rotateZ(100deg);\n    }\n    30% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n      transform: scale(1) rotateX(0deg) rotateY(0deg) rotateZ(0deg);\n    }\n  }\n\n  @keyframes appearOuterPath {\n    0% {\n      stroke-dashoffset: 445;\n      opacity: 0;\n    }\n    100% {\n      stroke-dashoffset: 0;\n      opacity: 1;\n    }\n  }\n\n  @keyFrames rotateOuterPath {\n    0% {\n      transform: rotateZ(0deg);\n    }\n    50% {\n      transform: rotateZ(360deg);\n    }\n    100% {\n      transform: rotateZ(360deg);\n    }\n  }\n\n  @keyframes appearInnerPath {\n    0% {\n      stroke-dashoffset: 390;\n      opacity: 0;\n    }\n    100% {\n      stroke-dashoffset: 0;\n      opacity: 1;\n    }\n  }\n\n  `}</style>\n      <svg\n        className={`graphqlLogo ${className}`}\n        style={{ width: '100%', ...style }}\n        viewBox=\"0 0 310 266\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <rect width=\"310\" height=\"266\" fill=\"white\" />\n        <path\n          className=\"outerPath\"\n          d=\"M215 86.5L150 50L85.5 86.5V163.5L150 199.5L215 163.5V86.5Z\"\n          stroke=\"#E10098\"\n          strokeWidth=\"10\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <path\n          className=\"innerPath\"\n          d=\"M85.5 163.5L150 50L215 163.5H85.5Z\"\n          stroke=\"#E10098\"\n          strokeWidth=\"10\"\n        />\n        <circle className=\"dot1\" cx=\"85\" cy=\"88\" r=\"16\" fill=\"#E10098\" />\n        <circle className=\"dot2\" cx=\"85\" cy=\"164\" r=\"16\" fill=\"#E10098\" />\n        <circle className=\"dot3\" cx=\"150\" cy=\"202\" r=\"16\" fill=\"#E10098\" />\n        <circle className=\"dot4\" cx=\"216\" cy=\"164\" r=\"16\" fill=\"#E10098\" />\n        <circle className=\"dot5\" cx=\"216\" cy=\"88\" r=\"16\" fill=\"#E10098\" />\n        <circle className=\"dot6\" cx=\"150\" cy=\"50\" r=\"16\" fill=\"#E10098\" />\n      </svg>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Heading, Slide, Text, Notes } from 'spectacle'\nimport Graphql from '../graphql'\n\nexport default (\n  <Slide\n    transition={['fade']}\n    bgColor=\"white\"\n    progressColor=\"black\"\n    controlColor=\"black\"\n  >\n    <img\n      src=\"assets/images/logo-cut.svg\"\n      alt=\"Teamstarter logo\"\n      className=\"fixed\"\n      style={{\n        top: 100,\n        right: 100,\n        width: '30%',\n        opacity: '0.2'\n      }}\n    />\n    <Graphql\n      className=\"absolute\"\n      style={{\n        bottom: 20,\n        left: 20,\n        width: '30%',\n        opacity: '0.2'\n      }}\n    />\n    <Notes>\n      <p>WHO ALREADY USE GRAPHQL IN PROD?</p>\n      <p>\n        In this postmortem we will go through our experience with GraphQL as a\n        startup.\n      </p>\n    </Notes>\n    <Heading size={1} caps fit textColor=\"black\">\n      STARTUPS\n    </Heading>\n    <Heading size={1} caps fit textColor=\"black\">\n      AND GRAPHQL\n    </Heading>\n    <div style={{ height: 50 }}> </div>\n    <Text textColor=\"pink\" fit bold>\n      Benefits & Drawbacks\n    </Text>\n    <div style={{ height: 50 }}> </div>\n    <Text textColor=\"blue\" fit bold>\n      A postmortem from teamstarter.co\n    </Text>\n  </Slide>\n)\n","import React from 'react'\nimport { Heading, Slide, Text } from 'spectacle'\nimport Graphql from '../graphql'\n\nconst fireworksStyle = `.pyro >.before,\n.pyro>.after {\n  position: absolute;\n  z-index: 10;\n  width: 6px;\n  height: 6px;\n  border-radius: 50%;\n  box-shadow: 0 0 #f442d9, 0 0 #eef442, 0 0 #f442d9, 0 0 #eef442, 0 0 #f442d9, 0 0 #eef442, 0 0 #f442d9, 0 0 #eef442, 0 0 #f442d9, 0 0 #2ddce5, 0 0 #f442d9, 0 0 #2ddce5, 0 0 #f442d9, 0 0 #2ddce5, 0 0 #f442d9, 0 0 #2ddce5, 0 0 #f442d9, 0 0 #5ff248, 0 0 #f442d9, 0 0 #5ff248, 0 0 #f442d9, 0 0 #5ff248, 0 0 #f442d9, 0 0 #5ff248, 0 0 #f442d9, 0 0 #5ff248, 0 0 #f442d9, 0 0 #f24330, 0 0 #f442d9, 0 0 #f24330, 0 0 #f442d9, 0 0 #f24330, 0 0 #f442d9, 0 0 #f442d9, 0 0 #f442d9, 0 0 #f442d9, 0 0 #f442d9, 0 0 #f442d9, 0 0 #f442d9, 0 0 #f442d9, 0 0 #f442d9, 0 0 #f442d9, 0 0 #f442d9, 0 0 #f442d9, 0 0 #f442d9, 0 0 #f442d9, 0 0 #f442d9, 0 0 #f442d9, 0 0 #f442d9, 0 0 #f442d9, 0 0 #f442d9;\n  animation: 1s bang ease-out infinite backwards, 1s gravity ease-in infinite backwards, 5s position linear infinite backwards;\n}\n\n.pyro>.after {\n  animation-delay: 1.25s, 1.25s, 1.25s;\n  animation-duration: 1.25s, 1.25s, 6.25s;\n}\n\n@keyframes bang {\n  to {\n    box-shadow: 65px -166.66667px #f2ff00, -66px -110.66667px #b300ff, -195px -12.66667px #a6ff00, -229px -141.66667px #0009ff, 191px 80.33333px #55ff00, -188px -415.66667px #00aaff, -194px -276.66667px #c800ff, 39px -175.66667px #ff9900, 110px -64.66667px #ff6200, 202px -297.66667px #ff0026, -203px -28.66667px #00c4ff, 233px -63.66667px #00ddff, -128px -145.66667px #00fff7, -216px -386.66667px #00d0ff, -152px -372.66667px #ff8000, 8px 61.33333px #2bff00, 49px -388.66667px #0066ff, 114px -243.66667px #00e6ff, -224px -382.66667px #003cff, -101px -224.66667px #00d0ff, 92px -255.66667px #51ff00, 207px -272.66667px #2bff00, 225px -244.66667px #00d0ff, -13px -189.66667px #33ff00, 200px -278.66667px #3c00ff, -225px -101.66667px #f700ff, 53px -292.66667px #000dff, 84px -340.66667px #ff1a00, -72px -72.66667px #ff5500, 111px 9.33333px #00ff6a, -206px -74.66667px #04ff00, 98px -14.66667px #77ff00, 241px -106.66667px #00ffa6, 69px -361.66667px #4400ff, 242px 7.33333px #00ff40, -102px -76.66667px #7700ff, 11px -84.66667px #44ff00, -104px -128.66667px #ff7700, -244px -223.66667px #ff00e6, 97px -127.66667px #88ff00, -115px -272.66667px #ff006f, -66px 74.33333px #aa00ff, 125px 65.33333px #00ffee, -202px -239.66667px #bf00ff, -25px -242.66667px #ff2600, -144px -177.66667px #0055ff, 215px -152.66667px #ffb700, 132px -66.66667px #5900ff, 135px -241.66667px #00ff33, -236px 55.33333px #ff5e00, 73px -30.66667px #6fff00;\n  }\n}\n\n@keyframes gravity {\n  to {\n    transform: translateY(200px);\n    opacity: 0;\n  }\n}\n\n@keyframes position {\n  0%,\n  19.9% {\n    margin-top: 10%;\n    margin-left: 40%;\n  }\n  20%,\n  39.9% {\n    margin-top: 40%;\n    margin-left: 30%;\n  }\n  40%,\n  59.9% {\n    margin-top: 20%;\n    margin-left: 70%;\n  }\n  60%,\n  79.9% {\n    margin-top: 30%;\n    margin-left: 20%;\n  }\n  80%,\n  99.9% {\n    margin-top: 30%;\n    margin-left: 80%;\n  }\n}`\n\nexport default (\n  <Slide\n    transition={['fade']}\n    bgColor=\"white\"\n    progressColor=\"black\"\n    controlColor=\"black\"\n  >\n    <style>{fireworksStyle}</style>\n    <Graphql style={{ width: 300 }} />\n    <Heading size={2} textColor=\"pink\" caps>\n      We're done!\n    </Heading>\n    <Text bold textColor=\"blue\">\n      Questions?\n    </Text>\n    <Text textSize={30} style={{ marginTop: 50 }}>\n      <a\n        className=\"dib\"\n        href=\"https://github.com/vincentdesmares/talk-startups-and-graphql-benefits-and-drawbacks\"\n      >\n        https://github.com/vincentdesmares/talk-startups-and-graphql-benefits-and-drawbacks\n      </a>\n    </Text>\n    <div\n      className=\"pyro\"\n      style={{\n        zIndex: 2,\n        position: 'absolute',\n        top: 0,\n        width: '100%',\n        height: '100%'\n      }}\n    >\n      <div className=\"before\" />\n      <div className=\"after\" />\n    </div>\n  </Slide>\n)\n","import React from 'react'\nimport { Heading, Slide, Text, Notes } from 'spectacle'\n\nexport default (\n  <Slide\n    transition={['slide']}\n    bgColor=\"white\"\n    progressColor=\"black\"\n    controlColor=\"black\"\n  >\n    <Notes>\n      <p>\n        Matters: product studio (+100 produits) / startup studio (Teamstarter)\n      </p>\n      <p>Link: what's teamstarter?</p>\n    </Notes>\n    <Heading size={1} caps lineHeight={1} textColor=\"black\">\n      I'm Vincent DESMARES\n    </Heading>\n    <Text textColor=\"pink\" fit style={{ marginTop: 50 }}>\n      Working @<b>Matters.tech</b> for 8 years! <br />\n      As Dev, Lead Dev and Project Manager.\n    </Text>\n    <Text textColor=\"blue\" style={{ marginTop: 50 }}>\n      Now CTO @ Teamstarter for 1 year.\n    </Text>\n  </Slide>\n)\n","import React from 'react'\nimport { Heading, Slide, Text, Notes } from 'spectacle'\n\nexport default (\n  <Slide\n    transition={['zoom']}\n    bgColor=\"pink\"\n    progressColor=\"black\"\n    controlColor=\"black\"\n  >\n    <Notes>\n      <p>Organization allow monthly funds</p>\n      <p>Each person received it continuously</p>\n      <p>Anyone can create and back a project</p>\n      <p>\n        Arcade box / Christmas decorations / Raclette party / Board games /\n        Conferences\n      </p>\n      <p>Launched last September but started the V1 in the end of 2017.</p>\n    </Notes>\n    <Heading size={1} caps lineHeight={1} textColor=\"white\" fit>\n      What's teamstarter?\n    </Heading>\n    <Text textColor=\"black\" fit bold>\n      It's like kickstarter in your organization.\n    </Text>\n    <Text textColor=\"white\" bold fit>\n      Your budget, your project, your culture.\n    </Text>\n  </Slide>\n)\n","import React from 'react'\n\nexport default function Warning() {\n  return (\n    <div>\n      <style>{`\n  @keyframes resetPosition {\n  0% {\n    transform: translateX(100px) translateY(100px);\n  }\n  100% {\n    transform: translateX(0px) translateY(0px);\n  }\n}\n  `}</style>\n      <img\n        className=\"absolute z-0 o-20\"\n        alt=\"warning\"\n        style={{\n          width: 600,\n          right: -100,\n          bottom: -60,\n          animation: 'resetPosition 1s ease-out'\n        }}\n        src=\"assets/images/warning.svg\"\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Slide, Heading, Text, Notes } from 'spectacle'\nimport Warning from '../warning'\n\nexport default (\n  <Slide\n    transition={['zoom']}\n    bgColor=\"blue\"\n    progressColor=\"black\"\n    controlColor=\"black\"\n  >\n    <Notes>\n      <p>A lot of challenges</p>\n      <p>\n        In this talk we will have an overview of those linked to the products.\n      </p>\n      <p>Launched last September but started the V1 in the end of 2017.</p>\n    </Notes>\n    <Warning />\n    <Heading fit textColor=\"black\" caps>\n      STARTING A STARTUP\n    </Heading>\n    <Text>NO PAST = EVERYTHING TO SETUP</Text>\n  </Slide>\n)\n","import React from 'react'\nimport { Heading, Slide, Notes, Text, Appear } from 'spectacle'\n\nexport default (\n  <Slide\n    transition={['zoom']}\n    bgColor=\"yellow\"\n    progressColor=\"black\"\n    controlColor=\"black\"\n  >\n    <Notes>\n      <p>\n        If you have a good idea, it's only a matters of time until your\n        competitors try to race you. You are in constant need for speed. And\n        what will matter is how much you can deliver today and how much what you\n        deliver today will slow you down for delivering tomorrow.\n      </p>\n    </Notes>\n    <Heading size={1} caps lineHeight={1} fit textColor=\"black\">\n      LIMITED ... EVERYTHING\n    </Heading>\n    <Heading size={1} caps lineHeight={1} fit textColor=\"red\">\n      TIME, MONEY, SUPPORT, MENTAL SPACE\n    </Heading>\n    <Appear>\n      <Text fit bold textColor=\"pink\">\n        Delivering value is priority N1\n      </Text>\n    </Appear>\n  </Slide>\n)\n","import React from 'react'\nimport { Heading, Slide, Notes, List, ListItem } from 'spectacle'\nimport Warning from '../warning'\n\nexport default (\n  <Slide\n    transition={['fade']}\n    bgColor=\"white\"\n    textColor=\"black\"\n    progressColor=\"black\"\n    controlColor=\"black\"\n  >\n    <Warning />\n    <Notes>\n      <p>My first point is that you are not going to just adopt a new RFC.</p>\n      <p>\n        GraphQL was matured for 3 years (2012/2015) by Facebook before being\n        released.\n      </p>\n    </Notes>\n    <Heading size={6} textColor=\"pink\" caps fit>\n      Not just a RFC\n    </Heading>\n    <Heading size={6} textColor=\"black\" caps fit>\n      it comes with a bunch of stuff\n    </Heading>\n    <List>\n      <ListItem>A good documentation</ListItem>\n      <ListItem>A server</ListItem>\n      <ListItem>A client</ListItem>\n      <ListItem>And a debug tool (GraphiQL)</ListItem>\n    </List>\n  </Slide>\n)\n","import React from 'react'\nimport { Heading, Slide, Notes, List, ListItem } from 'spectacle'\n\nexport default (\n  <Slide\n    transition={['fade']}\n    bgColor=\"blue\"\n    textColor=\"black\"\n    progressColor=\"black\"\n    controlColor=\"black\"\n  >\n    <img\n      className=\"absolute z-0\"\n      alt=\"warning\"\n      style={{\n        width: 300,\n        right: 100,\n        bottom: 100\n      }}\n      src=\"assets/images/learning.svg\"\n    />\n    <Notes>\n      <p>\n        A technologie can be nice, but if it's too difficult to onboard you can\n        have a real problem of turnover.\n      </p>\n      <p>\n        The fastest one learn a new technology, the more value he brings to your\n        project before leaving the company.\n      </p>\n    </Notes>\n    <Heading size={6} textColor=\"pink\" caps fit>\n      NICE LEARNING CURVE\n    </Heading>\n    <Heading size={6} textColor=\"WHITE\" caps fit>\n      FOR SUCCESSFUL ONBOARDINGS\n    </Heading>\n    <List>\n      <ListItem>Well documented https://graphql.org/learn</ListItem>\n      <ListItem>Intuitive</ListItem>\n      <ListItem>Visual</ListItem>\n      <ListItem>IMHO Being able to grow a team is N2 prio.</ListItem>\n    </List>\n  </Slide>\n)\n","import React from 'react'\nimport { Slide, Notes } from 'spectacle'\n\nexport default (\n  <Slide\n    transition={['fade']}\n    bgColor=\"purple\"\n    textColor=\"black\"\n    progressColor=\"black\"\n    controlColor=\"black\"\n  >\n    <Notes>\n      <p>Easy to understand at first glance.</p>\n      <p>Client side, if you know how to write the query, you're done.</p>\n      <p>Server side, it's another story...</p>\n    </Notes>\n\n    <img className=\"pt5\" src=\"assets/images/graphiql.png\" alt=\"graphiql\" />\n  </Slide>\n)\n","import React from 'react'\nimport { Heading, Slide, Notes, List, ListItem } from 'spectacle'\nimport Warning from '../warning'\n\nexport default (\n  <Slide\n    transition={['zoom']}\n    bgColor=\"red\"\n    textColor=\"black\"\n    progressColor=\"black\"\n    controlColor=\"black\"\n  >\n    <Warning />\n    <Notes>\n      <p>Resolvers are not difficult to write</p>\n      <p>It's just long and cumbersome.</p>\n      <p>Mostly because of types...</p>\n    </Notes>\n    <Heading size={6} textColor=\"WHITE\" caps fit>\n      WE'VE SEEN SHORTER\n    </Heading>\n    <Heading size={6} textColor=\"WHITE\" caps fit>\n      \"HELLO WORLD\"\n    </Heading>\n    <Heading size={6} textColor=\"BLACK\" caps fit>\n      RESOLVERS CAN BE A PAIN\n    </Heading>\n    <List textColor=\"white\">\n      <ListItem>With types comes type definition...</ListItem>\n      <ListItem>No more \".get('/foo')\"</ListItem>\n      <ListItem>Spend time setting up good toolings</ListItem>\n      <ListItem>Generate the basics!</ListItem>\n    </List>\n  </Slide>\n)\n","import React from 'react'\nimport { Heading, Slide, Notes, List, ListItem } from 'spectacle'\n\nexport default (\n  <Slide\n    transition={['fade']}\n    bgColor=\"white\"\n    textColor=\"black\"\n    progressColor=\"black\"\n    controlColor=\"black\"\n  >\n    <Notes>Types are often already part of your server code.</Notes>\n    <Heading size={6} textColor=\"pink\" caps fit>\n      GENERATE YOUR SCHEMA\n    </Heading>\n    <Heading size={6} textColor=\"black\" caps fit>\n      CRUD operations are a solved problem\n    </Heading>\n    <List>\n      <ListItem>graphql-sequelize-generator</ListItem>\n      <ListItem>graphql-code-generator</ListItem>\n      <ListItem>graphql-cli</ListItem>\n      <ListItem>json-graphql-server</ListItem>\n    </List>\n  </Slide>\n)\n","import React from 'react'\nimport { Heading, Slide, Notes, List, ListItem } from 'spectacle'\n\nexport default (\n  <Slide\n    transition={['fade']}\n    bgColor=\"blue\"\n    textColor=\"black\"\n    progressColor=\"black\"\n    controlColor=\"black\"\n  >\n    <Notes>\n      <p>\n        When you have no money it's something to consider. Better than some\n        solutions out there.\n      </p>\n    </Notes>\n    <Heading size={6} textColor=\"pink\" caps fit>\n      OPEN SOURCE\n    </Heading>\n    <Heading size={6} textColor=\"WHITE\" caps fit>\n      WE'RE NOT HERE TO SELL YOU THE VACUUM2000\n    </Heading>\n    <List>\n      <ListItem>Facebook backed</ListItem>\n      <ListItem>Yet not facebook centric</ListItem>\n      <ListItem>Kickstart your project with a SaaS</ListItem>\n      <ListItem>GraphCool/Prisma (BaaS), Contentful</ListItem>\n    </List>\n  </Slide>\n)\n","import React from 'react'\nimport { Heading, Slide, Notes, List, ListItem } from 'spectacle'\n\nexport default (\n  <Slide\n    transition={['fade']}\n    bgColor=\"pink\"\n    textColor=\"black\"\n    progressColor=\"black\"\n    controlColor=\"black\"\n  >\n    <Notes>\n      <p>Avoid a lot of requests and data-merging.</p>\n      <p>Allow easy evolution of your client AND server code.</p>\n      <p>Yet... all magic comes with a price</p>\n    </Notes>\n    <Heading size={6} textColor=\"black\" caps fit>\n      EVOLUTION READY\n    </Heading>\n    <Heading size={6} textColor=\"WHITE\" caps fit>\n      PIVOT PIVOT PIVOT\n    </Heading>\n    <List>\n      <ListItem>\"ask-what-you-need\" for each call</ListItem>\n      <ListItem>No versioning, field deprecation</ListItem>\n      <ListItem>Reduce the needs for custom endpoints</ListItem>\n    </List>\n  </Slide>\n)\n","import React from 'react'\nimport { Heading, Slide, Notes, Text } from 'spectacle'\n\nexport default (\n  <Slide\n    transition={['fade']}\n    bgColor=\"white\"\n    textColor=\"black\"\n    progressColor=\"black\"\n    controlColor=\"black\"\n  >\n    <Notes>\n      <p>\n        I was scared that I could not do \"Everything\" like I was doing before\n        with GraphQL.\n      </p>\n      <p>Truth is that I haven't find a use case that could not be met.</p>\n      <p>At least at my scale I'm very happy.</p>\n    </Notes>\n    <Heading size={6} textColor=\"pink\" caps fit>\n      HACKABLE\n    </Heading>\n    <Text>File upload, even on GraphQL!</Text>\n    <Text>(and it's not that hard)</Text>\n  </Slide>\n)\n","import React from 'react'\nimport { Heading, Slide, Notes, List, ListItem } from 'spectacle'\n\nexport default (\n  <Slide\n    transition={['fade']}\n    bgColor=\"blue\"\n    textColor=\"black\"\n    progressColor=\"black\"\n    controlColor=\"black\"\n  >\n    <Notes>\n      <p>One thing that appeared to me after months of dev.</p>\n      <p>Is how resilient my app was.</p>\n      <p>One element cannot be fetched? You app doesn't entierelly die.</p>\n      <p>Yet errors can be tricky in another way.</p>\n    </Notes>\n    <Heading size={6} textColor=\"BLACK\" caps fit>\n      WITH DELIVERING A LOT\n    </Heading>\n    <Heading size={6} textColor=\"pink\" caps fit>\n      COMES A LOT OF BUGS\n    </Heading>\n    <List>\n      <ListItem>Everybody has bugs</ListItem>\n      <ListItem>The question is how they impact your app?</ListItem>\n      <ListItem>Partial errors are one of my favorite feature</ListItem>\n      <ListItem>Only some nodes can be in error</ListItem>\n      <ListItem>Allows nice error management</ListItem>\n    </List>\n  </Slide>\n)\n","import React from 'react'\nimport { Heading, Slide, Notes, List, ListItem } from 'spectacle'\n\nexport default (\n  <Slide\n    transition={['fade']}\n    bgColor=\"blue\"\n    textColor=\"black\"\n    progressColor=\"black\"\n    controlColor=\"black\"\n  >\n    <Notes>\n      <p>\n        We talked about the problem of heavy typing and how it can adds a few\n        minutes to create a new type.\n      </p>\n      <p>But this will allow to win a few hours later.</p>\n      <p>\n        As everything is typed, marvelous, cash and refresh mechanism can be\n        easily setup (3-4 lines of code).\n      </p>\n    </Notes>\n    <img\n      className=\"absolute z-0\"\n      alt=\"react\"\n      style={{\n        width: '20%',\n        right: 80,\n        bottom: 80\n      }}\n      src=\"assets/images/react.svg\"\n    />\n    <Heading size={6} textColor=\"BLACK\" caps fit>\n      HEAVY TYPING\n    </Heading>\n    <Heading size={6} textColor=\"pink\" caps fit>\n      Can have unattended benefits\n    </Heading>\n    <List>\n      <ListItem>Fine client side caching mechanism</ListItem>\n      <ListItem>Refresh related components on fetch</ListItem>\n    </List>\n  </Slide>\n)\n","import React from 'react'\nimport { Heading, Slide, Notes, List, ListItem } from 'spectacle'\n\nexport default (\n  <Slide\n    transition={['fade']}\n    bgColor=\"white\"\n    textColor=\"black\"\n    progressColor=\"black\"\n    controlColor=\"black\"\n  >\n    <img\n      className=\"absolute z-0\"\n      alt=\"warning\"\n      style={{\n        width: '25%',\n        right: 150,\n        bottom: 100\n      }}\n      src=\"assets/images/team.svg\"\n    />\n    <Notes>\n      <p>My first of my advice not really related to the tech itself.</p>\n    </Notes>\n    <Heading size={6} textColor=\"blue\" caps fit>\n      Taking the market in account\n    </Heading>\n    <List style={{ marginBottom: 200 }}>\n      <ListItem>A tech is nothing without developers</ListItem>\n      <ListItem>Check your local market</ListItem>\n    </List>\n  </Slide>\n)\n","import React from 'react'\nimport { Heading, Slide, Notes, List, ListItem } from 'spectacle'\n\nexport default (\n  <Slide\n    transition={['fade']}\n    bgColor=\"pink\"\n    textColor=\"black\"\n    progressColor=\"black\"\n    controlColor=\"black\"\n  >\n    <Notes>\n      <p>You will never look at swagger the same way.</p>\n      <p>Very good default developer experience.</p>\n    </Notes>\n    <Heading size={6} textColor=\"WHITE\" caps fit>\n      A FLEXIBLE API\n    </Heading>\n    <Heading size={6} textColor=\"blue\" caps fit>\n      IS AN EASY TO SELL API\n    </Heading>\n    <List>\n      <ListItem>Avoid customer specific code</ListItem>\n      <ListItem>Subscriptions allows for real-time notice</ListItem>\n      <ListItem>And kind-of replace WebHooks</ListItem>\n    </List>\n  </Slide>\n)\n","import React from 'react'\nimport { Slide, Heading, List, ListItem, Notes } from 'spectacle'\n\nexport default (\n  <Slide\n    transition={['fade']}\n    bgColor=\"white\"\n    progressColor=\"black\"\n    controlColor=\"black\"\n  >\n    <img\n      className=\"absolute z-0\"\n      alt=\"warning\"\n      style={{\n        width: '25%',\n        right: 150,\n        bottom: 100\n      }}\n      src=\"assets/images/blocks.svg\"\n    />\n\n    <Notes>\n      <p>We'll now talking about OTHERS APIs.</p>\n      <p>You can compose them with the schema stitching</p>\n      <p>\n        It \"should\" be nice but it's difficult to find good ones right now.\n        Through it becomes better everyday.\n      </p>\n    </Notes>\n    <Heading fit textColor=\"pink\" caps>\n      USING EXTERNAL APIs\n    </Heading>\n    <List>\n      <ListItem>Schema stitching</ListItem>\n      <ListItem>Regroup your microservices APIs</ListItem>\n      <ListItem>Include other SaaS APIs in yours</ListItem>\n      <ListItem>AWS Appsync</ListItem>\n      <ListItem textColor=\"red\" bold>\n        Yet, it's a bit early for it\n      </ListItem>\n    </List>\n  </Slide>\n)\n","import React from 'react'\nimport { Heading, Slide, Notes, List, ListItem } from 'spectacle'\nimport Warning from '../warning'\n\nexport default (\n  <Slide\n    transition={['zoom']}\n    bgColor=\"red\"\n    textColor=\"black\"\n    progressColor=\"black\"\n    controlColor=\"black\"\n  >\n    <Warning />\n    <Notes>\n      <p>Complex dynamic queries creates complex dynamic problems.</p>\n      <p>Solutions are available.</p>\n      <p>But in general careless programming will quickly kill your app.</p>\n    </Notes>\n    <Heading size={6} textColor=\"WHITE\" caps fit>\n      PERFORMANCES ISSUES\n    </Heading>\n    <Heading size={6} textColor=\"WHITE\" caps fit>\n      ARE GRAPHQL BIGGEST PROBLEM\n    </Heading>\n    <List textColor=\"white\">\n      <ListItem>Yes it avoids overfetch, but...</ListItem>\n      <ListItem>\"Infinite\" query complexity</ListItem>\n      <ListItem>Query time issues</ListItem>\n      <ListItem>Query batching ? Facebook dataloader</ListItem>\n      <ListItem>Keep performances in mind at all times</ListItem>\n    </List>\n  </Slide>\n)\n","import React from 'react'\nimport { Heading, Slide, Notes, Text } from 'spectacle'\n\nexport default (\n  <Slide\n    transition={['zoom']}\n    bgColor=\"yellow\"\n    progressColor=\"black\"\n    controlColor=\"black\"\n  >\n    <Notes>\n      <p>Please everyone, lover of hatters, chill.</p>\n    </Notes>\n    <Heading size={1} caps lineHeight={1} fit textColor=\"black\">\n      USE WHAT YOU LIKE\n    </Heading>\n    <Heading size={1} caps lineHeight={1} fit textColor=\"pink\">\n      LET'S TONE DOWN THE RHETORIC\n    </Heading>\n    <Text>\n      ‘Great developers — not programming languages — build great\n      products.’&nbsp;\n      <italic>\n        <small>Kevin Dewalt</small>\n      </italic>\n    </Text>\n  </Slide>\n)\n","import React from 'react'\nimport { Heading, Slide, Notes, List, ListItem } from 'spectacle'\nimport Warning from '../warning'\n\nexport default (\n  <Slide\n    transition={['zoom']}\n    bgColor=\"red\"\n    textColor=\"black\"\n    progressColor=\"black\"\n    controlColor=\"black\"\n  >\n    <Warning />\n    <Notes>\n      <p>It can be hard to see what is not working \"The old way\"</p>\n    </Notes>\n    <Heading size={6} textColor=\"WHITE\" caps fit>\n      SOME CHANGES FROM REST\n    </Heading>\n    <Heading size={6} textColor=\"WHITE\" caps fit>\n      ARE HARDER THAN OTHERS\n    </Heading>\n    <List textColor=\"white\">\n      <ListItem>Setup your logs correctly (* is a 200)</ListItem>\n      <ListItem>Difficult to cache without proper tooling</ListItem>\n      <ListItem>No full use of HTTP (* is a POST)</ListItem>\n    </List>\n  </Slide>\n)\n","import React from 'react'\nimport { Heading, Slide, Notes, List, ListItem } from 'spectacle'\n\nexport default (\n  <Slide\n    transition={['zoom']}\n    bgColor=\"pink\"\n    progressColor=\"black\"\n    controlColor=\"black\"\n  >\n    <Notes>\n      <p>\n        Last point before wrapping up. We did not choose GraphQL just by reading\n        blog posts.\n      </p>\n    </Notes>\n    <Heading size={1} caps lineHeight={1} fit textColor=\"white\">\n      YOU DO NOT HAVE TO\n    </Heading>\n    <Heading size={1} caps lineHeight={1} fit textColor=\"blue\">\n      CHOOSE ALONE\n    </Heading>\n    <List>\n      <ListItem>\"city-o\", the CTO club</ListItem>\n      <ListItem>Find a startup studio (we're part of Matters)</ListItem>\n      <ListItem>Go to meetups! (You got this one already)</ListItem>\n    </List>\n  </Slide>\n)\n","import React from 'react'\nimport { Heading, Slide, Notes } from 'spectacle'\nimport Warning from '../warning'\n\nexport default (\n  <Slide\n    transition={['zoom']}\n    bgColor=\"red\"\n    textColor=\"black\"\n    progressColor=\"black\"\n    controlColor=\"black\"\n  >\n    <Warning />\n    <Notes>\n      <p>Resolvers must take in account the context they are called with.</p>\n    </Notes>\n    <Heading size={6} textColor=\"WHITE\" caps fit>\n      \"SMART\" RIGHTS\n    </Heading>\n    <Heading size={6} textColor=\"WHITE\" caps fit>\n      YOUR RESOLVER MUST BE CONTEXT DEPENDENT\n    </Heading>\n    <img\n      src=\"assets/images/rights.svg\"\n      alt=\"Smart rights\"\n      className=\"w-100 mt5\"\n    />\n  </Slide>\n)\n","import React from 'react'\nimport { Deck } from 'spectacle'\n\nimport createTheme from 'spectacle/lib/themes/default'\nimport Intro from './slide/intro'\nimport 'tachyons/css/tachyons.min.css'\nimport Questions from './slide/questions'\nimport Me from './slide/me'\nimport WhatIsTeamstarter from './slide/whatIsTeamstarter'\nimport startingAStartup from './slide/startingAStartup'\nimport sectionLimitedTime from './slide/sectionLimitedTime'\nimport notJustARFC from './slide/notJustARFC'\nimport easyToUnderstand from './slide/easyToUnderstand'\nimport graphiql from './slide/graphiql'\nimport resolversCanBeAPain from './slide/resolversCanBeAPain'\nimport generatingYourSchema from './slide/generatingYourSchema'\nimport openSource from './slide/openSource'\nimport evolutionReady from './slide/evolutionReady'\nimport adaptable from './slide/adaptable'\nimport speedAndBugs from './slide/speedAndBugs'\nimport heavyTyping from './slide/heavyTyping'\nimport takingInAccountTheMarket from './slide/takingInAccountTheMarket'\nimport everythingIsAnAPI from './slide/everythingIsAnAPI'\nimport useAPIs from './slide/useAPIs'\nimport performances from './slide/performances'\nimport beConfident from './slide/beConfident'\nimport someChangesAreHarderThanOthers from './slide/someChangesAreHarderThanOthers'\nimport youDoNotHaveToChooseAlone from './slide/youDoNotHaveToChooseAlone'\nimport smartRights from './slide/smartRights'\n\nrequire('normalize.css')\n\nconst theme = createTheme(\n  {\n    white: 'white',\n    black: '#1F2022',\n    pink: '#ff00ac',\n    blue: '#00dade',\n    yellow: '#ffe400',\n    grey: '#888888',\n    red: '#eb5757'\n  },\n  {\n    primary: 'Montserrat',\n    secondary: 'Helvetica'\n  }\n)\n\nexport default class Presentation extends React.Component {\n  render() {\n    return (\n      <Deck transition={['fade']} transitionDuration={500} theme={theme}>\n        {Intro}\n        {Me}\n        {WhatIsTeamstarter}\n        {startingAStartup}\n        {sectionLimitedTime}\n        {notJustARFC}\n        {easyToUnderstand}\n        {graphiql}\n        {resolversCanBeAPain}\n        {generatingYourSchema}\n        {openSource}\n        {evolutionReady}\n        {performances}\n        {smartRights}\n        {adaptable}\n        {speedAndBugs}\n        {someChangesAreHarderThanOthers}\n        {heavyTyping}\n        {everythingIsAnAPI}\n        {useAPIs}\n        {takingInAccountTheMarket}\n        {beConfident}\n        {youDoNotHaveToChooseAlone}\n        {Questions}\n      </Deck>\n    )\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Presentation from './presentation'\nimport registerServiceWorker from './registerServiceWorker'\n\nReactDOM.render(<Presentation />, document.getElementById('root'))\nregisterServiceWorker()\n"],"sourceRoot":""}